var viLocale = {
    "LangInfo": "[vi] {'code': 'vi', 'dialect': 'VN', 'name': 'Vietnamese', 'description': 'Tiếng Việt'}",
    "DeleteConfirm": "[vi] Are you sure you want to delete selected item(s)?",
    "DeleteConfirmCurrent": "[vi] Are you sure you want to delete this item?",
    "EscapeConfirm": "[vi] There are unsaved changes. Do you want to save the schema?",
    "ReplaceSchemeConfirm": "[vi] A scheme with that name already exists. Do you want to replace it?",
    "FieldIsRequired": "[vi] Field is required!",
    "FieldIsNotCorrected": "[vi] Field is not correct!",
    "DoNotCombineCalendars": "[vi] It is impossible to combine time with working time",
    "FieldMustBeUnique": "[vi] Field must be unique!",
    "FieldMustContainAt": "[vi] Field must contain @",
    "ButtonTextDelete": "[vi] Delete",
    "ButtonTextCreate": "[vi] Create",
    "ButtonTextSave": "[vi] Save",
    "ButtonTextYes": "[vi] Yes",
    "ButtonTextNo": "[vi] No",
    "ButtonTextOk": "[vi] Ok",
    "ButtonTextCancel": "[vi] Cancel",
    "ButtonTextClose": "[vi] Close",
    "ButtonTextUndo": "[vi] Undo",
    "ButtonTextRedo": "[vi] Redo",
    "SaveConfirm": "[vi] Save changes?",
    "CloseWithoutSaving": "[vi] Close without saving?",
    "TransitionAuto": "[vi] Auto",
    "DialogConfirmText": "[vi] Question",
    "AlertTitle": "[vi] Warning",
    "ReadMore": "[vi] Read more.",
    "None": "[vi] None",
    "Name": "[vi] Name",
    "Warning": "[vi] Warning",
    "SchemeSaved": "[vi] Scheme saved",
    "SchemeNotSaved": "[vi] Scheme not saved",
    "SwitchToExpertMode": "[vi] Switch To Expert Mode",
    "SwitchToDefaultMode": "[vi] Switch To Default Mode",
    "InfoBlockLabel": "[vi] {'Activity': 'Activities: ', 'Transition': 'Transitions: ', 'Command': 'Commands: '}",
    "ActivityNamePrefix": "[vi] Activity",
    "ActivityFormLabel": "[vi] {'Title': 'Activity', 'TitleForInline': 'Activity Inline', 'Name': 'Name', 'State': 'State', 'IsInitial': 'Initial', 'IsFinal': 'Final', 'IsForSetState': 'For set state', 'IsAutoSchemeUpdate': 'Auto scheme update', 'DisablePersist': 'Disable persist', 'DisablePersists': {'DisablePersistTransitionHistory': 'Disable persist transition history', 'DisablePersistState': 'Disable persist process state', 'DisablePersistParameters': 'Disable persist process parameters'}, 'Implementation': 'Implementation', 'PreExecutionImplementation': 'PreExecution Implementation', 'ImpOrder': 'Order', 'ExecutionTimeoutLabel': 'Execution timeout', 'ExecutionTimeoutWarning': 'Execution timeout works only with async actions. Check the cancellation token for proper timeout handling.', 'TimeoutsLabel': 'Timeouts', 'TypeLabel': 'Type', 'ActivityLabel': 'Activity', 'StateLabel': 'State', 'RetryCountLabel': 'Retry count', 'SetActivityLabel': 'SetActivity', 'SetStateLabel': 'SetState', 'RetryLabel': 'Retry', 'IgnoreLabel': 'Ignore', 'AllExceptions': '*', 'IdleTimeoutLabel': 'Idle timeout', 'ExceptionsHandling': 'Exceptions handling', 'Exceptions': 'Exceptions', 'ImpAction': 'Action', 'ImpActionParameter': 'Action parameter', 'Annotations': 'Annotations', 'AnnotationName': 'Name', 'AnnotationValue': 'Value', 'Scheme': 'Inline scheme', 'UserComment': 'Comment'}",
    "Decision": "[vi] {'Title': 'Decision', 'TitleForInline': 'Decision Inline', 'To': 'To activity', 'WhenTrue': 'When True', 'WhenFalse': 'When False', 'Transition': 'Transitions to activities', 'Name': 'Name', 'State': 'State', 'IsInitial': 'Initial', 'IsFinal': 'Final', 'IsForSetState': 'For set state', 'IsAutoSchemeUpdate': 'Auto scheme update', 'Implementation': 'Implementation', 'PreExecutionImplementation': 'PreExecution Implementation', 'Annotations': 'Annotations', 'Scheme': 'Inline scheme', 'Condition': 'Condition', 'ConditionType': 'Type', 'ConditionAction': 'Action', 'ResultOnPreExecution': 'PreExec. Result', 'ConditionActionParameter': 'Action parameter', 'ConditionInversion': 'Invert result', 'ActionLabel': 'Action', 'ExpressionLabel': 'Expression', 'UserComment': 'Comment'}",
    "DecisionTable": "[vi] {'Title': 'Decision table', 'TitleForInline': 'Decision table Inline', 'To': 'To activity', 'Transition': 'Transitions to activities', 'Parameters': 'Parameters', 'Name': 'Name', 'State': 'State', 'IsInitial': 'Initial', 'IsFinal': 'Final', 'IsForSetState': 'For set state', 'IsAutoSchemeUpdate': 'Auto scheme update', 'Implementation': 'Implementation', 'PreExecutionImplementation': 'PreExecution Implementation', 'Annotations': 'Annotations', 'Scheme': 'Inline scheme', 'ConditionType': 'Type', 'Condition': 'Condition', 'ConditionAction': 'Action', 'ResultOnPreExecution': 'PreExec. Result', 'ConditionActionParameter': 'Action parameter', 'ConditionInversion': 'Invert result', 'ActionLabel': 'Action', 'ExpressionLabel': 'Expression', 'UserComment': 'Comment'}",
    "TransitionFormLabel": "[vi] {'Title': 'Transition', 'Name': 'Name', 'From': 'From activity', 'To': 'To activity', 'Classifier': 'Classifier', 'ClassifierValues': {'NotSpecified': 'NotSpecified', 'Direct': 'Direct', 'Reverse': 'Reverse'}, 'Restrictions': 'Restrictions', 'RestrictionsType': 'Type', 'RestrictionsActor': 'Actor', 'Condition': 'Condition', 'ConditionType': 'Type', 'ConditionAction': 'Action', 'ResultOnPreExecution': 'PreExec. Result', 'Trigger': 'Trigger', 'TriggerType': 'Type', 'TriggerAuto': 'Auto', 'TriggerCommand': 'Command', 'TriggerTimer': 'Timer', 'ConditionActionParameter': 'Action parameter', 'ConditionExpression': 'Expression', 'ConditionInversion': 'Invert result', 'ConditionsConcatenationType': 'Conditions concatenation type', 'AllowConcatenationType': 'Concat allow as', 'RestrictConcatenationType': 'Concat restrict as', 'IsFork': 'Is fork (Parallel process)', 'MergeViaSetState': 'Merge subprocess via set state', 'DisableParentStateControl': 'Disable parent process control', 'ShowConcatParameters': 'Show concatenation', 'HideConcatParameters': 'Hide concatenation', 'Annotations': 'Annotations', 'AnnotationName': 'Name', 'AnnotationValue': 'Value', 'InlinedFinalActivityName': 'Inlined Final Activity Name', 'Allow': 'Allow', 'Restrict': 'Restrict', 'ConditionsListShouldNotBeEmpty': 'Conditions list should not be empty', 'AlwaysConditionShouldBeSingle': 'Always condition should be single', 'AlwaysConditionIsIllegal': 'Always condition is illegal', 'OtherwiseConditionShouldBeSingle': 'Otherwise condition should be single', 'ConditionalLabel': 'Conditional', 'AlwaysLabel': 'Always', 'ActionLabel': 'Action', 'ExpressionLabel': 'Expression', 'OtherwiseLabel': 'Otherwise', 'UserComment': 'Comment', 'Subprocess': 'Subprocess', 'SubprocessNone': 'None', 'SubprocessStart': 'Start', 'SubprocessFinalize': 'Finalize', 'SubprocessAuto': 'Auto', 'SubprocessStartSettings': 'Subprocess start settings', 'SubprocessFinalizeSettings': 'Subprocess finalize settings', 'SubprocessName': 'Subprocess name', 'SubprocessId': 'Subprocess id', 'SubprocessIdPlaceholder': 'Autogenerated GUID', 'SubprocessNamePlaceholder': 'Same as transition name', 'SubprocessStartupType': 'Subprocess startup type', 'SubprocessStartupTypeSameThread': 'Same thread', 'SubprocessStartupTypeAnotherThread': 'Another thread', 'SubprocessStartupTypeTimerQueue': 'Timer queue', 'SubprocessStartupParameterCopyStrategy': 'Parameters copy strategy', 'SubprocessStartupParameterCopyStrategyCopyAll': 'Copy all', 'SubprocessStartupParameterCopyStrategyIgnoreAll': 'Ignore all', 'SubprocessStartupParameterCopyStrategyCopySpecified': 'Copy specified', 'SubprocessStartupParameterCopyStrategyIgnoreSpecified': 'Ignore specified', 'SubprocessSpecifiedParameters': 'Specified parameters', 'SubprocessFinalizeParameterMergeStrategy': 'Parameters merge strategy', 'SubprocessFinalizeParameterMergeStrategyOverwriteAllNulls': 'Overwrite all nulls', 'SubprocessFinalizeParameterMergeStrategyOverwriteAll': 'Overwrite all', 'SubprocessFinalizeParameterMergeStrategyOverwriteSpecified': 'Overwrite specified', 'SubprocessFinalizeParameterMergeStrategyDontOverwriteSpecified': \"Don't overwrite specified\"}",
    "LocalizationFormLabel": "[vi] {'Title': 'Localization', 'ObjectName': 'ObjectName', 'Type': 'Type', 'IsDefault': 'IsDefault', 'Culture': 'Culture', 'Value': 'Value', 'ShowPredefined': 'Show predefined', 'Types': {'State': 'State', 'Parameter': 'Parameter', 'Action': 'Action', 'Condition': 'Condition', 'Command': 'Command', 'Comment': 'Comment', 'Scheme': 'Scheme'}}",
    "TimerFormLabel": "[vi] {'Title': 'Timers', 'Name': 'Name', 'Type': 'Type', 'Value': 'Value', 'OverrideHint': 'Override timer if exists', 'Override': 'Override'}",
    "AssignmentFormLabel": "[vi] {'Title': 'Assignments', 'Code': 'Code', 'Name': 'Name', 'Executor': 'Executor', 'ExecutorId': 'Executor Id', 'Status': 'Status', 'DateCreation': 'Date creation', 'Description': 'Description', 'DateStart': 'Date start', 'DateFinish': 'Date finish', 'DeadlineToStart': 'Deadline to start', 'DeadlineToFinish': 'Deadline to finish', 'Observers': 'Observers', 'ObserverId': 'Observer Id', 'Tags': 'Tags', 'ProhibitedForExecution': 'Prohibited for execution', 'AssignmentDeleted': 'Assignment deleted', 'TypeSomething': 'Type something'}",
    "BpmnPlugin": "[vi] {'ServiceTask': 'Service task', 'ParallelGateway': 'Parallel gateway', 'MessageCatchEvent': 'Message catch event', 'TimerCatchEvent': 'Timer catch event', 'ExclusiveGateway': 'Exclusive gateway', 'EndEvent': 'End event', 'TerminateEvent': 'Terminate end event', 'StartEvent': 'Start event', 'DefaultFlow': 'Default flow'}",
    "ParameterFormLabel": "[vi] {'Title': 'Parameters', 'Name': 'Name', 'Type': 'Type', 'Purpose': 'Purpose', 'Value': 'Value', 'InitialValue': 'InitialValue', 'ShowSystemParameters': 'Show system parameters'}",
    "ActorFormLabel": "[vi] {'Title': 'Actors', 'Name': 'Name', 'Rule': 'Rule', 'Value': 'Value', 'ShowPredefinedActors': 'Show predefined actors'}",
    "CommandFormLabel": "[vi] {'Title': 'Command', 'Name': 'Name'}",
    "CommandParametersFormLabel": "[vi] {'Title': 'command parameters', 'InputParametersName': 'Name', 'InputParametersIsRequired': 'Required', 'InputParametersParameter': 'Parameter', 'InputParametersDefaultValue': 'Default'}",
    "ProcessInfoFormLabel": "[vi] {'Title': 'Process Info', 'IsObsolete': 'IsObsolete', 'DefiningParameters': 'Defining parameters', 'ProcessParameters': 'Process parameters', 'SystemParametersTabName': 'System Parameters', 'ProcessParametersTabName': 'Process Parameters', 'HistoryTabName': 'History', 'TimersTabName': 'Timers', 'TagsTabName': 'Tags', 'TagsInputPlaceholder': 'Start entering a name to add a tag', 'HistoryTabFromLabel': 'From', 'HistoryTabFromStateLabel': 'From State', 'HistoryTabToLabel': 'To', 'HistoryTabToStateLabel': 'To State', 'HistoryTabExecutorIdLabel': 'Executor Id', 'HistoryTabActorIdLabel': 'Actor Id', 'HistoryTabExecutorLabel': 'Executor', 'HistoryTabActorLabel': 'Actor', 'HistoryTabTimeLabel': 'Time', 'HistoryTabStartTimeLabel': 'Start Time', 'HistoryTabDurationLabel': 'Duration (ms)', 'HistoryTabTriggerNameLabel': 'Trigger Name', 'HistoryTabTransitionClassifierNameLabel': 'Classifier', 'ParametersNameLabel': 'Name', 'ParametersValueLabel': 'Value', 'TimersTabNameLabel': 'Name', 'TimersTabValueLabel': 'Value', 'RootProcess': 'Root Process', 'TagsLabel': 'Tags', 'GeneralTabLabel': 'General', 'ProcessIdLabel': 'Process Id', 'WorkCalendar': 'Work calendar', 'CalendarPlaceholder': 'Start typing a name to find a calendar'}",
    "DropdownValues": "[vi] {'Name': 'Name', 'Value': 'Value', 'Dropdown': 'Dropdown', 'Values': 'values'}",
    "CodeActionsFormLabel": "[vi] {'Title': 'Code actions', 'Name': 'Name', 'ActionCode': 'Action code', 'CommonUsings': 'Common Usings', 'IsGlobal': 'Is global', 'IsAsync': 'Async', 'Type': 'Type', 'CustomTypeHint': 'To use a custom type, add its name here and add its implementation to the jsonform template.', 'GlobalDeleteMessage': \"If you've delete the Global CodeAction - <br/><b>other schemes won't be able to call it!</b>\", 'UnGlobalMessage': \"You've changed the state of the global flag.<br/>There will be created a Local CodeAction based on this Global CodeAction after saving this scheme.\", 'EditParameters': 'Edit parameters', 'Parameters': 'Parameters', 'Text': 'Text', 'TextArea': 'TextArea', 'Number': 'Number', 'Checkbox': 'Checkbox', 'Dropdown': 'Dropdown', 'MultiSelect': 'MultiSelect', 'DateTime': 'Date and time', 'Date': 'Date', 'Time': 'Time', 'Values': 'Values', 'DropdownName': 'Name', 'DropdownValue': 'Value', 'DropdownShouldContainValues': 'Dropdown should contain values', 'IsRequired': 'Required', 'DefaultValue': 'Default value', 'Json': 'Json', 'TitleField': 'Title'}",
    "EditParametersFormlabel": "[vi] {'Title': 'Edit parameter values', 'NumberRequired': 'Should be a numeric value', 'DateShouldBeInISOFormat': 'Date/Time parameter should be in ISO8601 format', 'SwitchToJson': 'Switch to JSON editor', 'SwitchToConstructor': 'Switch to parameter values editor', 'InvalidJson': 'JSON object is invalid or does not match the model', 'CustomForms': {'HTTPRequest': {'Name': 'Name', 'State': 'State', 'UseAuth': 'Use authentication', 'Heading': 'Request', 'Url': 'Url', 'Post': 'Post', 'StoreResponse': 'Store response', 'Username': 'Username', 'Password': 'Password', 'ParameterName': 'Parameter name', 'ParameterPurpose': 'Parameter purpose', 'ContentType': 'Content type', 'AddProcessInstanceParameters': 'Add process instance parameters', 'Parameters': 'Parameters', 'Headers': 'Headers'}, 'SendEmail': {'Name': 'Name', 'State': 'State', 'Heading': 'Form', 'UseAuth': 'Use authentication', 'MailServer': 'Mail server', 'MailServerPort': 'Mail server port', 'MailServerFrom': 'Mail server from', 'To': 'To', 'CcList': 'CC address list', 'BccList': 'BCC address list', 'ReplyToList': 'Reply to address list', 'Subject': 'Subject', 'MailServerSsl': 'MailServerSsl', 'IsHTML': 'IsHTML', 'MailServerLogin': 'Mail server login', 'MailServerPass': 'Mail server pass', 'Body': 'Body'}, 'StartLoopFor': {'Name': 'Name', 'State': 'State', 'Heading': 'Loop', 'DateRange': 'Date range', 'RangeSeparator': 'To', 'StartDate': 'Start date', 'EndDate': 'End date', 'Reverse': 'Reverse', 'LoopName': 'Loop name', 'LoopStateParameterName': 'Loop state parameter name', 'LoopCounterValueParameterName': 'Loop counter value parameter name', 'CounterType': 'Counter type', 'StartValue': 'Start value', 'EndValue': 'End value', 'Step': 'Step', 'StepType': 'Step type', 'IncludeLastValue': 'Include last value'}, 'StartLoopForeach': {'Name': 'Name', 'State': 'State', 'Heading': 'Loop', 'ValuesError': 'None value cannot be empty!', 'Values': 'Values', 'LoopName': 'Loop name', 'LoopStateParameterName': 'Loop state parameter name', 'LoopCounterValueParameterName': 'Loop counter value parameter name', 'Reverse': 'Reverse'}, 'CreateProcess': {'Name': 'Name', 'State': 'State', 'Heading': 'Main settings', 'ParameterName': 'Name', 'ParameterPurpose': 'Purpose', 'ParameterValue': 'Value', 'Scheme': 'Scheme', 'ProcessId': 'Process id', 'ProcessCreationParameters': 'Process creation parameters'}, 'AssignmentCreate': {'Name': 'Name', 'State': 'State', 'Heading': 'Assignment', 'Code': 'Code', 'NewTag': 'New Tag', 'Executors': 'Executors', 'IsActive': 'Is active', 'Description': 'Description', 'DeadlineToStart': 'Deadline to start', 'DeadlineToComplete': 'Deadline to complete', 'Observers': 'Observers', 'Tags': 'Tags'}, 'AssignmentChange': {'Name': 'Name', 'State': 'State', 'Heading': 'Assignment', 'Code': 'Code', 'ReplacementExecutors': 'Replacement of executors', 'OldExecutor': 'Old executor', 'NewExecutor': 'New executor', 'AllExecutors': 'All', 'Change': 'Change', 'Status': 'Status', 'DeadlineToStart': 'Deadline to start', 'DeadlineToComplete': 'Deadline to complete', 'Tags': 'Tags', 'Observers': 'Observers', 'NewTag': 'New Tag', 'StatusState': 'Status state', 'IsActive': 'Is active'}, 'AssignmentsHaveStatus': {'Name': 'Name', 'State': 'State', 'Code': 'Code', 'Condition': 'Condition', 'IncludeInactive': 'Include inactive', 'StatusState': 'Status state', 'Assignments': 'Assignments'}, 'SetLoopState': {'Name': 'Name', 'State': 'State', 'LoopName': 'Loop name', 'LoopState': 'Loop state'}}, 'IncorrectForm': \"Your form contains greater than one element, and at least one element doesn't have a Name. Please specify the Name for each element.\"}",
    "ElementToolbar": "[vi] {'ShowProperties': 'Show properties', 'Clone': 'Clone', 'Color': 'Color', 'Delete': 'Delete'}",
    "ActivityToolbar": "[vi] {'CreateActivity': 'Create activity', 'CreateTransition': 'Create transition', 'CreateTransitionAndActivity': 'Create transition and activity'}",
    "ToolbarLabel": "[vi] {'CopySelected': 'Copy selected', 'Save': 'Save', 'Undo': 'Undo', 'Redo': 'Redo', 'Move': 'Move', 'Menu': 'Menu', 'FitToScreen': 'Fit to screen', 'UploadScheme': 'Upload scheme', 'UploadBPMN': 'Upload BPMN', 'DownloadScheme': 'Download scheme', 'FullScreen': 'Full Screen', 'ResetZoom': 'Reset zoom', 'Refresh': 'Refresh', 'View': 'View', 'Scheme': 'Scheme', 'AutoArrangement': 'Auto arrangement', 'Actors': 'Actors', 'Commands': 'Commands', 'Parameters': 'Parameters', 'Assignments': 'Assignments', 'Localization': 'Localization', 'Timers': 'Timers', 'AdditionalParameters': 'Additional Parameters', 'CodeActions': 'Code actions', 'Info': 'Extended info', 'Delete': 'Delete', 'Settings': 'Settings', 'CreateTransition': 'Create a transition', 'CreateActivityTransition': 'Create an activity and a transition', 'Legend': 'Legend', 'ProcessInfo': 'Process Info', 'Inline': 'The scheme can be inlined', 'Elements': 'Elements', 'Library': 'Library', 'Language': 'Language', 'File': 'File', 'SaveToImage': 'Save to image', 'SaveAs': 'Save as...', 'UntitledScheme': 'Untitled scheme', 'ShowGrid': 'Show grid', 'ImageQuality': 'Quality (pixel aspect ratio):', 'ResetSettings': 'Reset settings', 'Clear': 'Clear', 'ActivitiesCount': 'Activities count / Limit', 'TransitionsCount': 'Transitions count / Limit', 'CommandsCount': 'Commands count / Limit', 'CreateActivity': 'Create activity', 'CreateInline': 'Create inline (template)', 'ZoomIn': 'Zoom In', 'ZoomOut': 'Zoom Out', 'ZoomTo100': 'Set zoom to 100%', 'Clone': 'Clone', 'ZoomPositionDefault': 'Zoom default', 'InstanceInfo': 'Instance info', 'About': 'About'}",
    "LibraryLabel": "[vi] {'PluginRequired': 'Plugin required:'}",
    "Logs": "[vi] {'Label': 'Logs', 'ParamName': 'LogEnabled', 'Description': 'This parameter is the default value for logging processes based on this scheme', 'Refresh': 'Refresh', 'AutoRefresh': 'Auto refresh', 'Empty': 'Empty', 'Timestamp': 'Timestamp', 'Message': 'Message', 'Exception': 'Exception', 'Show': 'Show', 'ExceptionInfo': 'Exception info', 'HideDetails': 'Hide details', 'ShowDetails': 'Show details'}",
    "ErrorActivityIsInitialCountText": "[vi] One element must be marked flag Initial",
    "ErrorActivityIsFinalCountText": "[vi] This scheme is Inlined. One or more elements must be marked flag Final",
    "ErrorReadOnlySaveText": "[vi] The Designer in ReadOnly mode, you can't save it.",
    "ErrorInvalidObjectsSaveText": "[vi] Can't save the schema. Those objects are in invalid state",
    "BrokenReferencesDialogText": "[vi] This schema contains references to ELEMENTS that aren't defined by this schema or current action providers. Do you want to keep them?",
    "EditCodeLabel": "[vi] {'Title': 'Edit code', 'EditCodeButton': 'Edit code', 'Usings': 'Usings', 'Compile': 'Compile', 'CompileSucceeded': 'Compilation succeeded.', 'Success': 'Success', 'Error': 'Error', 'OK': 'OK', 'ShowUsings': 'Show usings', 'HideUsings': 'Hide usings'}",
    "EditJSONLabel": "[vi] {'Title': 'Edit value in JSON', 'CreateEmptyType': 'Create', 'Format': 'Format'}",
    "EditExpressionLabel": "[vi] {'Title': 'Edit expression', 'Validate': 'Validate', 'Succeeded': 'Expression is valid.', 'Success': 'Success', 'Error': 'Error', 'OK': 'OK'}",
    "Elements": "[vi] {'Activities': 'Activities', 'BPMN': 'BPMN', 'Templates': 'Templates', 'BasicActivity': 'Basic Activity', 'BasicActivityDesc': 'It determines a state and the order, in which Actions are executed in your process.', 'InlineHeader': 'Inline', 'InitialActivity': 'Initial Activity', 'PluginRequired': 'Plugin required:', 'InitialActivityDesc': 'It a initial state.', 'FinalActivity': 'Final Activity', 'FinalActivityDesc': 'It a final state.', 'SetLoopState': {'Title': 'Set loop state', 'Description': 'The action for set loop state'}, 'Comment': {'Title': 'Comment', 'Description': 'Place a comment on the scheme', 'Name': 'Name', 'CommentText': 'Comment text', 'Alignment': 'Alignment', 'FontSize': 'Font size', 'TextFormatting': 'Text formatting'}, 'Header': 'Elements'}",
    "UploadBpmnLabel": "[vi] {'Title': 'Upload Bpmn', 'OverwriteExisting': 'Overwrite previously uploaded schemes', 'MainSchemeCode': 'Main scheme code', 'Upload': 'Upload', 'Rerender': 'Rerender', 'UploadHint': 'Click on Upload to start uploading the schema.'}",
    "ErrorInBrowserConsole": "[vi] See more info in the browser console.",
    "FileNotExist": "[vi] The file doesn't exist",
    "DesignerVersion": "[vi] Designer version",
    "BackendVersion": "[vi] Backend version",
    "InformationCopiedToClipboard": "[vi] The information is copied to the clipboard.",
    "DesignerAndBackendVersionMismatch": "[vi] Designer and Backend versions do not match!",
    "InformationCopiedToClipboardAndConsole": "[vi] The information is copied to the clipboard and displayed in the browser console.",
    "ClipboardAccessDenied": "[vi] Access to the clipboard has been denied. The information is displayed in the browser console.",
    "elementUILocalization": {
        "el": {
            "datepicker": {
                "now": "Bây giờ",
                "today": "Hôm nay",
                "cancel": "Hủy",
                "clear": "Xóa",
                "confirm": "OK",
                "selectDate": "Chọn ngày",
                "selectTime": "Chọn giờ",
                "startDate": "Ngày bắt đầu",
                "startTime": "Giờ bắt đầu",
                "endDate": "Ngày kết thúc",
                "endTime": "Giờ kết thúc"
            },
            "pagination": {
                "goto": "Đến trang",
                "pagesize": "/trang",
                "total": "Tổng cộng {total}",
                "pageClassifier": ""
            },
            "messagebox": {
                "title": "Thông báo",
                "confirm": "Xác nhận",
                "cancel": "Hủy",
                "error": "Dữ liệu không hợp lệ"
            }
        }
    }
};